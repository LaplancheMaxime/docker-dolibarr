stages:
  - build
  - test
  - deploy
  - .post

.matrix:versions:variants: &matrix_versions_variants
  parallel:
    matrix:
      - VERSION: ['11.0', '12.0', '13.0', '14.0', '15.0']
        PHP_VERSION: ['7.4']
        VARIANT: ['fpm-alpine', 'fpm', 'apache']
        ARCHI: ['i386', 'amd64']
      - VERSION: ['16.0']
        PHP_VERSION: ['8.1']
        VARIANT: ['fpm-alpine', 'fpm', 'apache']
        ARCHI: ['i386', 'amd64']

.docker:build: &docker_build
  - chmod -R +x ./hooks
  - chmod +x ./hooks/run
  - ./hooks/run build
  # - ./hooks/run test

.base:project:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache bash
    - cd images/${VERSION}/php${PHP_VERSION}-${VARIANT}-${ARCHI}
    - /bin/sh -c "echo 'test'"
    - /bin/bash -c "echo 'test'"
  tags:
    - docker
    - production


develop:docker:
  extends: .base:project
  <<: *matrix_versions_variants
  script:
    - *docker_build
  rules:
    - if: $CI_COMMIT_BRANCH == 'develop'

main:docker:
  extends: .base:project
  <<: *matrix_versions_variants
  script:
    - *docker_build
    # ne pas oublier de mettre les identifiants docker
    - ./hooks/run push
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - images/${VERSION}/php${PHP_VERSION}-${VARIANT}-${ARCHI}/Dockerfile

sonarcloud-check:
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  stage: test
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - main
    - develop
  tags:
    - docker
    - production

dockerhub:readme:
  stage: .post
  image:
    name: chko/docker-pushrm
    entrypoint: ["/bin/sh", "-c", "/docker-pushrm"]
  variables:
    PUSHRM_TARGET: docker.io/$DOCKER_USER/docker-dolibarr
    USHRM_DEBUG: 1
    PUSHRM_FILE: $CI_PROJECT_DIR/README.md
  script: "/bin/true"
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: on_success
  tags:
    - docker
    - production
