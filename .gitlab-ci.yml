stages:
  - build
  - test
  - deploy

.matrix:versions:variants: &matrix_versions_variants
  parallel:
    matrix:
      - VERSION: ['11.0', '12.0', '13.0', '14.0', '15.0']
        PHP_VERSION: ['7.4']
        VARIANT: ['fpm-alpine', 'fpm', 'apache']
        ARCHI: ['i386', 'amd64']
      - VERSION: ['16.0']
        PHP_VERSION: ['8.1']
        VARIANT: ['fpm-alpine', 'fpm', 'apache']
        ARCHI: ['i386', 'amd64']

.docker:build: &docker_build
  - chmod -R +x ./hooks
  - chmod +x ./hooks/run
  - ls -al ./hooks
  - ./hooks/run build
  - docker images
  - ./hooks/run test

.base:project:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker info
    - cd images/${VERSION}/php${PHP_VERSION}-${VARIANT}-${ARCHI}
    - /bin/sh -c "echo 'test'"
    - /bin/bash -c "echo 'test'"

develop:docker:
  extends: .base:project
  <<: *matrix_versions_variants
  script:
    - *docker_build
  rules:
    - if: $CI_COMMIT_BRANCH == 'develop'

main:docker:
  extends: .base:project
  <<: *matrix_versions_variants
  script:
    - *docker_build
    # ne pas oublier de mettre les identifiants docker
    - ./hooks/run push
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - images/${VERSION}/php${PHP_VERSION}-${VARIANT}-${ARCHI}/Dockerfile
  