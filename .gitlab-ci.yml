stages:
  - build
  - test
  - deploy
  - .post

.matrix:versions:variants: &matrix_versions_variants
  parallel:
    matrix:
      - VERSION: ['11.0', '12.0', '13.0', '14.0', '15.0', '16.0']

dockerfile:base:
  stage: .pre
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:latest" .
    - docker push -a $CI_REGISTRY_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - Dockerfile
        - requirements.txt
      when: always
    - when: never
  tags:
    - docker
    - production

.base:project:
  stage: build
  image: registry.gitlab.com/mlaplanche/docker-dolibarr:latest
  <<: *matrix_versions_variants
  variables:
    DOCKER_PASS: $DOCKER_PASSWORD
    DOCKER_LOGIN: $DOCKER_USER
    DOCKER_BUILDKIT: 1
    PYTHON_ON_WHALES_DEBUG: 0
  services:
    - docker:dind
  before_script:
    - pip install --no-cache-dir -r requirements.txt
  tags:
    - docker
    - production

develop:docker:
  extends: .base:project
  script:
    - python build_push.py -v ${VERSION}
  rules:
    - if: $CI_COMMIT_BRANCH == 'develop'
      changes:
        - images/${VERSION}/**/*

main:docker:
  extends: .base:project
  script:
    - python build_push.py -v ${VERSION} -p
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - images/${VERSION}/**/*

sonarcloud-check:
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  stage: test
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - main
    - develop
  tags:
    - docker
    - production

dockerhub:readme:
  stage: .post
  image:
    name: chko/docker-pushrm
    entrypoint: ["/bin/sh", "-c", "/docker-pushrm --debug"]
  variables:
    PUSHRM_TARGET: docker.io/$DOCKER_USER/docker-dolibarr
    USHRM_DEBUG: 1
    PUSHRM_FILE: $CI_PROJECT_DIR/docs/README_DOCKER_HUB.md
    DOCKER_PASS: $DOCKER_PASSWORD
    DOCKER_LOGIN: $DOCKER_USER
  script: "/bin/true"
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: on_success
  tags:
    - docker
    - production
